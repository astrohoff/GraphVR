/* Generated By:CSharpCC: Do not edit this line. SyntaxCheckerTokenManager.cs */
namespace org.mariuszgromada.math.mxparser.syntaxchecker {
using System;
using System.IO;
[CLSCompliant(false)]
public class SyntaxCheckerTokenManager : SyntaxCheckerConstants {
  public  System.IO.TextWriter debugStream = Console.Out;
  public  void SetDebugStream(System.IO.TextWriter ds) { debugStream = ds; }
private int mccStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 268435456L) != 0L)
            return 57;
         if ((active0 & 16384L) != 0L)
            return 16;
         if ((active0 & 12582912L) != 0L)
            return 3;
         if ((active0 & 4096L) != 0L)
            return 47;
         if ((active0 & 2048L) != 0L)
            return 67;
         if ((active0 & 131072L) != 0L)
            return 5;
         if ((active0 & 512L) != 0L)
            return 19;
         return -1;
      default :
         return -1;
   }
}
private int mccStartNfa_0(int pos, long active0)
{
   return mccMoveNfa_0(mccStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int mccStopAtPos(int pos, int kind)
{
   mccmatchedKind = kind;
   mccmatchedPos = pos;
   return pos + 1;
}
private int mccStartNfaWithStates_0(int pos, int kind, int state) {
   mccmatchedKind = kind;
   mccmatchedPos = pos;
   try { curChar = input_stream.ReadChar(); }
   catch(System.IO.IOException) { return pos + 1; }
   return mccMoveNfa_0(state, pos + 1);
}
private int mccMoveStringLiteralDfa0_0()
{
   switch((int)curChar) {
      case 33:
         return mccStartNfaWithStates_0(0, 17, 5);
      case 37:
         return mccStopAtPos(0, 16);
      case 40:
         return mccStartNfaWithStates_0(0, 9, 19);
      case 41:
         return mccStopAtPos(0, 10);
      case 42:
         return mccStopAtPos(0, 13);
      case 43:
         return mccStartNfaWithStates_0(0, 11, 67);
      case 44:
         return mccStopAtPos(0, 18);
      case 45:
         return mccStartNfaWithStates_0(0, 12, 47);
      case 47:
         return mccStartNfaWithStates_0(0, 14, 16);
      case 59:
         return mccStopAtPos(0, 19);
      case 60:
         mccmatchedKind = 22;
         return mccMoveStringLiteralDfa1_0(8388608L);
      case 62:
         mccmatchedKind = 24;
         return mccMoveStringLiteralDfa1_0(33554432L);
      case 91:
         return mccStopAtPos(0, 41);
      case 93:
         return mccStopAtPos(0, 42);
      case 94:
         return mccStopAtPos(0, 15);
      case 126:
         return mccStartNfaWithStates_0(0, 28, 57);
      default :
         return mccMoveNfa_0(0, 0);
   }
}
private int mccMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.ReadChar(); }
   catch(System.IO.IOException) {
      mccStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch((int)curChar) {
      case 61:
         if ((active0 & 8388608L) != 0L)
            return mccStopAtPos(1, 23);
         else if ((active0 & 33554432L) != 0L)
            return mccStopAtPos(1, 25);
         break;
      default :
         break;
   }
   return mccStartNfa_0(0, active0);
}
private void mccCheckNAdd(int state)
{
   if (mccrounds[state] != mccround)
   {
      mccstateSet[mccnewStateCnt++] = state;
      mccrounds[state] = mccround;
   }
}
private void mccAddStates(int start, int end)
{
   do {
      mccstateSet[mccnewStateCnt++] = mccnextStates[start];
   } while (start++ != end);
}
private void mccCheckNAddTwoStates(int state1, int state2)
{
   mccCheckNAdd(state1);
   mccCheckNAdd(state2);
}
private void mccCheckNAddStates(int start, int end)
{
   do {
      mccCheckNAdd(mccnextStates[start]);
   } while (start++ != end);
}
private void mccCheckNAddStates(int start)
{
   mccCheckNAdd(mccnextStates[start]);
   mccCheckNAdd(mccnextStates[start + 1]);
}
private int mccMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   mccnewStateCnt = 67;
   int i = 1;
   mccstateSet[0] = startState;
   int kind = Int32.MaxValue;
   for (;;)
   {
      if (++mccround == Int32.MaxValue)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(mccstateSet[--i])
            {
               case 47:
                  if (curChar == 43)
                  {
                     if (kind > 43)
                        kind = 43;
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 43)
                        kind = 43;
                  }
                  else if (curChar == 47)
                     mccstateSet[mccnewStateCnt++] = 49;
                  else if (curChar == 62)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  break;
               case 0:
                  if ((287948901175001088 & l) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                     mccCheckNAddStates(0, 4);
                  }
                  else if ((-8358469149332078592 & l) != 0L)
                  {
                     if (kind > 37)
                        kind = 37;
                  }
                  else if (curChar == 60)
                     mccAddStates(5, 7);
                  else if (curChar == 45)
                     mccAddStates(8, 9);
                  else if (curChar == 43)
                     mccCheckNAddTwoStates(29, 30);
                  else if (curChar == 40)
                     mccstateSet[mccnewStateCnt++] = 19;
                  else if (curChar == 38)
                     mccstateSet[mccnewStateCnt++] = 14;
                  else if (curChar == 33)
                     mccstateSet[mccnewStateCnt++] = 5;
                  else if (curChar == 61)
                     mccstateSet[mccnewStateCnt++] = 1;
                  if (curChar == 45)
                     mccCheckNAddTwoStates(30, 29);
                  else if (curChar == 46)
                     mccCheckNAdd(23);
                  else if (curChar == 47)
                     mccstateSet[mccnewStateCnt++] = 16;
                  else if (curChar == 38)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  else if (curChar == 60)
                     mccstateSet[mccnewStateCnt++] = 3;
                  else if (curChar == 61)
                  {
                     if (kind > 20)
                        kind = 20;
                  }
                  break;
               case 57:
                  if (curChar == 47)
                     mccstateSet[mccnewStateCnt++] = 60;
                  else if (curChar == 38)
                     mccstateSet[mccnewStateCnt++] = 58;
                  else if (curChar == 61)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  if (curChar == 38)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  break;
               case 3:
                  if (curChar == 45)
                     mccstateSet[mccnewStateCnt++] = 55;
                  else if (curChar == 47)
                     mccstateSet[mccnewStateCnt++] = 53;
                  else if (curChar == 62)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  if (curChar == 45)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  break;
               case 67:
                  if (curChar == 45)
                  {
                     if (kind > 43)
                        kind = 43;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 43)
                        kind = 43;
                  }
                  break;
               case 1:
                  if (curChar == 61 && kind > 20)
                     kind = 20;
                  break;
               case 2:
                  if (curChar == 61)
                     mccstateSet[mccnewStateCnt++] = 1;
                  break;
               case 4:
                  if (curChar == 60)
                     mccstateSet[mccnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 61 && kind > 21)
                     kind = 21;
                  break;
               case 6:
                  if (curChar == 33)
                     mccstateSet[mccnewStateCnt++] = 5;
                  break;
               case 11:
                  if (curChar == 47 && kind > 26)
                     kind = 26;
                  break;
               case 13:
               case 14:
                  if (curChar == 38 && kind > 27)
                     kind = 27;
                  break;
               case 15:
                  if (curChar == 38)
                     mccstateSet[mccnewStateCnt++] = 14;
                  break;
               case 17:
                  if (curChar == 47)
                     mccstateSet[mccnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 40)
                     mccstateSet[mccnewStateCnt++] = 19;
                  break;
               case 19:
                  if (curChar == 43)
                     mccstateSet[mccnewStateCnt++] = 20;
                  break;
               case 20:
                  if (curChar == 41)
                     kind = 36;
                  break;
               case 21:
                  if ((-8358469149332078592 & l) != 0L && kind > 37)
                     kind = 37;
                  break;
               case 22:
                  if (curChar == 46)
                     mccCheckNAdd(23);
                  break;
               case 23:
                  if ((287948901175001088 & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  mccCheckNAdd(23);
                  break;
               case 25:
                  if ((287948901175001088 & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  mccAddStates(10, 11);
                  break;
               case 28:
                  if (curChar == 43)
                     mccCheckNAddTwoStates(29, 30);
                  break;
               case 29:
                  if (curChar == 43 && kind > 43)
                     kind = 43;
                  break;
               case 30:
                  if (curChar == 45 && kind > 43)
                     kind = 43;
                  break;
               case 31:
                  if (curChar == 45)
                     mccCheckNAddTwoStates(30, 29);
                  break;
               case 33:
                  if (curChar == 43 && kind > 40)
                     kind = 40;
                  break;
               case 36:
                  if (curChar == 45 && kind > 40)
                     kind = 40;
                  break;
               case 39:
                  if ((287948901175001088 & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  mccCheckNAddStates(0, 4);
                  break;
               case 40:
                  if ((287948901175001088 & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  mccCheckNAdd(40);
                  break;
               case 41:
                  if ((287948901175001088 & l) != 0L)
                     mccCheckNAddTwoStates(41, 42);
                  break;
               case 42:
                  if (curChar == 46 && kind > 38)
                     kind = 38;
                  break;
               case 43:
                  if ((287948901175001088 & l) != 0L)
                     mccCheckNAddTwoStates(43, 44);
                  break;
               case 44:
                  if (curChar == 46)
                     mccCheckNAdd(45);
                  break;
               case 45:
                  if ((287948901175001088 & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  mccCheckNAdd(45);
                  break;
               case 46:
                  if (curChar == 45)
                     mccAddStates(8, 9);
                  break;
               case 48:
                  if (curChar == 47)
                     mccstateSet[mccnewStateCnt++] = 49;
                  break;
               case 49:
                  if (curChar == 62 && kind > 31)
                     kind = 31;
                  break;
               case 50:
                  if (curChar == 60)
                     mccAddStates(5, 7);
                  break;
               case 51:
                  if (curChar == 45 && kind > 30)
                     kind = 30;
                  break;
               case 52:
                  if (curChar == 47)
                     mccstateSet[mccnewStateCnt++] = 53;
                  break;
               case 53:
                  if (curChar == 45 && kind > 32)
                     kind = 32;
                  break;
               case 54:
                  if (curChar == 45)
                     mccstateSet[mccnewStateCnt++] = 55;
                  break;
               case 55:
                  if (curChar == 62 && kind > 34)
                     kind = 34;
                  break;
               case 58:
                  if (curChar == 38 && kind > 33)
                     kind = 33;
                  break;
               case 59:
                  if (curChar == 38)
                     mccstateSet[mccnewStateCnt++] = 58;
                  break;
               case 61:
                  if (curChar == 47)
                     mccstateSet[mccnewStateCnt++] = 60;
                  break;
               case 65:
                  if (curChar == 47 && kind > 35)
                     kind = 35;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 63);
         do
         {
            switch(mccstateSet[--i])
            {
               case 0:
                  if ((576460745995190270 & l) != 0L)
                  {
                     if (kind > 39)
                        kind = 39;
                     mccCheckNAddTwoStates(25, 27);
                  }
                  else if ((4563402753 & l) != 0L)
                  {
                     if (kind > 37)
                        kind = 37;
                  }
                  else if (curChar == 126)
                     mccAddStates(12, 17);
                  else if (curChar == 124)
                     mccstateSet[mccnewStateCnt++] = 9;
                  if (curChar == 100)
                     mccAddStates(18, 19);
                  else if (curChar == 92)
                     mccstateSet[mccnewStateCnt++] = 11;
                  else if (curChar == 124)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  else if (curChar == 126)
                     mccstateSet[mccnewStateCnt++] = 5;
                  break;
               case 57:
                  if (curChar == 92)
                     mccstateSet[mccnewStateCnt++] = 65;
                  else if (curChar == 124)
                     mccstateSet[mccnewStateCnt++] = 63;
                  if (curChar == 124)
                  {
                     if (kind > 35)
                        kind = 35;
                  }
                  break;
               case 7:
                  if (curChar == 126)
                     mccstateSet[mccnewStateCnt++] = 5;
                  break;
               case 8:
               case 9:
                  if (curChar == 124 && kind > 26)
                     kind = 26;
                  break;
               case 10:
                  if (curChar == 124)
                     mccstateSet[mccnewStateCnt++] = 9;
                  break;
               case 12:
                  if (curChar == 92)
                     mccstateSet[mccnewStateCnt++] = 11;
                  break;
               case 16:
                  if (curChar == 92 && kind > 27)
                     kind = 27;
                  break;
               case 21:
                  if ((4563402753 & l) != 0L && kind > 37)
                     kind = 37;
                  break;
               case 24:
                  if ((576460745995190270 & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  mccCheckNAddTwoStates(25, 27);
                  break;
               case 26:
                  if ((576460745995190270 & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  mccCheckNAddTwoStates(25, 26);
                  break;
               case 27:
                  if ((576460745995190270 & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  mccCheckNAddStates(20, 22);
                  break;
               case 32:
                  if (curChar == 100)
                     mccAddStates(18, 19);
                  break;
               case 34:
                  if (curChar == 114)
                     mccstateSet[mccnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 101)
                     mccstateSet[mccnewStateCnt++] = 34;
                  break;
               case 37:
                  if (curChar == 114)
                     mccstateSet[mccnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 101)
                     mccstateSet[mccnewStateCnt++] = 37;
                  break;
               case 56:
                  if (curChar == 126)
                     mccAddStates(12, 17);
                  break;
               case 60:
                  if (curChar == 92 && kind > 33)
                     kind = 33;
                  break;
               case 62:
               case 63:
                  if (curChar == 124 && kind > 35)
                     kind = 35;
                  break;
               case 64:
                  if (curChar == 124)
                     mccstateSet[mccnewStateCnt++] = 63;
                  break;
               case 66:
                  if (curChar == 92)
                     mccstateSet[mccnewStateCnt++] = 65;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 63);
         do
         {
            switch(mccstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != Int32.MaxValue)
      {
         mccmatchedKind = kind;
         mccmatchedPos = curPos;
         kind = Int32.MaxValue;
      }
      ++curPos;
      if ((i = mccnewStateCnt) == (startsAt = 67 - (mccnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.ReadChar(); }
      catch(System.IO.IOException) { return curPos; }
   }
}
static readonly int[] mccnextStates = {
   40, 41, 42, 43, 44, 51, 52, 54, 47, 48, 26, 25, 57, 59, 61, 62,
   64, 66, 35, 38, 25, 26, 27,
};
public static readonly string[] mccstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "(", ")", "+", "-", "*",
"/", "^", "%", "!", ",", ";", null, null, "<", "<=", ">", ">=", null, null, "~",
null, null, null, null, null, null, null, null, null, null, null, null, "[", "]",
null, null, };
public static readonly string[] lexStateNames = {
   "DEFAULT",
};
static readonly long[] mcctoToken = {
   35184372088577,
};
static readonly long[] mcctoSkip = {
   30,
};
protected SimpleCharStream input_stream;
private readonly int[] mccrounds = new int[67];
private readonly int[] mccstateSet = new int[134];
protected char curChar;
public SyntaxCheckerTokenManager(SimpleCharStream stream) {
   if (SimpleCharStream.staticFlag)
      throw new System.SystemException("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public SyntaxCheckerTokenManager(SimpleCharStream stream, int lexState) :
   this(stream) {
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream) {
   mccmatchedPos = mccnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   mccround = -2147483647;
   for (i = 67; i-- > 0;)
      mccrounds[i] = Int32.MinValue;
}
public void ReInit(SimpleCharStream stream, int lexState) {
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState) {
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.InvalidLexicalState);
   else
      curLexState = lexState;
}
protected Token mccFillToken()
{
   Token t = Token.NewToken(mccmatchedKind);
   t.kind = mccmatchedKind;
   string im = mccstrLiteralImages[mccmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.BeginLine;
   t.beginColumn = input_stream.BeginColumn;
   t.endLine = input_stream.EndLine;
   t.endColumn = input_stream.EndColumn;
   return t;
}
int curLexState = 0;
int defaultLexState = 0;
int mccnewStateCnt;
int mccround;
int mccmatchedPos;
int mccmatchedKind;
public Token GetNextToken() {
  Token matchedToken;
  int curPos = 0;
for (;;) {
   try {
      curChar = input_stream.BeginToken();
   } catch(System.IO.IOException) {
      mccmatchedKind = 0;
      matchedToken = mccFillToken();
      return matchedToken;
   }
   try { input_stream.Backup(0);
      while (curChar <= ' ' && (4294977024L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   } catch (System.IO.IOException) { goto EOFLoop; }
   mccmatchedKind = Int32.MaxValue;
   mccmatchedPos = 0;
   curPos = mccMoveStringLiteralDfa0_0();
   if (mccmatchedPos == 0 && mccmatchedKind > 44)
   {
      mccmatchedKind = 44;
   }
   if (mccmatchedKind != Int32.MaxValue) {
      if (mccmatchedPos + 1 < curPos)
         input_stream.Backup(curPos - mccmatchedPos - 1);
      if ((mcctoToken[mccmatchedKind >> 6] & (1L << (mccmatchedKind & 63))) != 0L) {
         matchedToken = mccFillToken();
         return matchedToken;
      }
      else
      {
         goto EOFLoop;
      }
   }
   int error_line = input_stream.EndLine;
   int error_column = input_stream.EndColumn;
   string error_after = null;
   bool EOFSeen = false;
   try { input_stream.ReadChar(); input_stream.Backup(1); }
   catch (System.IO.IOException) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      } else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.Backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LexicalError);
EOFLoop: ;
  }
}
}
}
